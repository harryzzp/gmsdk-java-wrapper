/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_gmsdk_WRAP_H_
#define SWIG_gmsdk_WRAP_H_

class SwigDirector_Strategy : public Strategy, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Strategy(JNIEnv *jenv, char const *token, char const *strategy_id, int mode);
    SwigDirector_Strategy(JNIEnv *jenv);
    virtual ~SwigDirector_Strategy();
    virtual void on_init();
    virtual void on_tick(Tick *tick);
    virtual void on_bar(Bar *bar);
    virtual void on_order_status(Order *order);
    virtual void on_execution_report(ExecRpt *rpt);
    virtual void on_parameter(Parameter *param);
    virtual void on_schedule(char const *data_rule, char const *time_rule);
    virtual void on_backtest_finished(Indicator *indicator);
    virtual void on_account_status(AccountStatus *account_status);
    virtual void on_error(int error_code, char const *error_msg);
    virtual void on_stop();
    virtual void on_market_data_connected();
    virtual void on_trade_data_connected();
    virtual void on_market_data_disconnected();
    virtual void on_trade_data_disconnected();
public:
    bool swig_overrides(int n) {
      return (n < 15 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<15> swig_override;
};


#endif
